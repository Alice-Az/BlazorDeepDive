@page "/servers/add"
@rendermode InteractiveServer

@inject NavigationManager NavigationManager

<h3>Add Server</h3>
<br />
<br />

<EditForm Model="server" OnValidSubmit="Submit">
    <DataAnnotationsValidator></DataAnnotationsValidator>

    <FieldComponent Label="Name">
        <Control>
            <InputText @bind-Value="server.Name" class="form-control input-width"></InputText>
        </Control>
        <ValidationControl>
            <ValidationMessage For="() => server.Name"></ValidationMessage>
        </ValidationControl>
    </FieldComponent>

    <FieldComponent Label="City">
        <Control>
            <InputText @bind-Value="server.City" class="form-control input-width"></InputText>
        </Control>
        <ValidationControl>
            <ValidationMessage For="() => server.City"></ValidationMessage>
        </ValidationControl>
    </FieldComponent>

    <FieldComponent Label="Online">
        <Control>
            <InputCheckbox @bind-Value="server.IsOnline" class="form-check-input"></InputCheckbox>
        </Control>
    </FieldComponent>

    <br />
    <button class="btn btn-primary" type="submit">Add</button>
    &nbsp;
    <a href="/servers" class="btn btn-primary">Close</a>
</EditForm>



@code {
    private Server server { get; set; } = new() { IsOnline = false };

    private async Task Submit()
    {
        if (server != null)
        {
            ServersRepository.AddServer(server);
        }
        NavigationManager.NavigateTo($"/servers/back_from/{server?.City}");
    }
}